Changes

0.01.3
* Ported to Lazarus and compiled for Windows 32/64 bit, macOS 32/64 bit, and Linux 32/64/ARM.

0.01.4
* Changed the Open File Dialogue filter from '*.*' to '*' as Linux was not listing all files.
* Most transparency masks now added.
* Facilty to save as PNG.
* Can now drag and drop files onto the application to open them.

0.01.5
* Code dealing with the sprite files moved to a class module.
* Now upscales the bpp on bitmaps when there is no room for a transparency colour.
* Can deal with 32bpp CMYK sprites.
* Allows for variable transparency colour for bitmaps.
* Notes the OS compatibility.
* Correctly calculates the start of row for the resultant bitmap using the calculated bpp, not the original.
* Progress bar for loading files and displaying them.
* Added some more sprite types/mode flags.
* Described the spite type and mode flags in the diagnostic output.

1.00
* Correctly deals with 16 and 32 bit TRGB and ARGB formats.
* Fixed a bug dealing with new style transparent masks.
* The upscaling from 8 to 16 bpp was not working correctly.
* Transparent masks where not being shown as transparent for 16bpp bitmaps.
* Fixed an issue with some 32 bit sprites being shown as totally transparent.
* Can now deal with wide masks - but does not treat them as an Alpha channel, yet.
* Merged the code for new and old style masks, thereby reading 1bpp and wide masks.
* Re-wrote the code to get the sprite and mask data, reducing the code, speeding it up and making it less of a mess.
* Added more sprite details to the expanded sprite view dialogue window.

1.01
* Method to load a sprite file now returns an error code if unsuccessful.
* The sprite display, on the main window, now gets arranged so no names overlap.
* The main window is now resizeable, and the sprites get re-arranged as the window resizes.
* Double clicking on the sprite name has the same effect as double clicking on the sprite.
* Single clicking on the sprite or the name will select it.
* Save as BMP and Save as PNG now enabled.
* Save As BMP and PNG;Save As BMP;and Save As PNG can now save a single sprite (the one selected).
* Correctly deals with 16bpp sprite types 10 (5:6:5) and 16 (4:4:4:4).
* The sprite filename and number of sprites is reported in the status bar at the bottom.
* Correctly deals with 32bpp sprite type 7 (CMYK).
* Deals with 8bpp partial palettes.
* Can now save a RISC OS sprite palette file, from the palette in the selected sprite.

1.02
* Changed the method to which the sprites are converted to. A PNG file is now created, as each sprite is read, maintaining the transparency mask. This is then converted to Windows Bitmap at the end of each sprite conversion, complete with Alpha channel. All PNGs/Bitmaps are now created as 32bpp.
* Removed (or, rather, commented out) all the code to create the bitmaps.
* Removed the creation of the log file.
* Removed the class properties of BGColour, ColoursUsed, ColourCount, BPPOriginal and LogFile.
* Added in properties of SpriteCount, FirstSprite, and LastFreeWord. These are so that a log file can be manually created if it is required.
* Moved the code to check for RGB/BGR to overall, instead of one in 16bpp and one in 32bpp.
* Now checks for ModeFlag being 'RGB' when checking if BGR or RGB.
* Now checks the ModeFlag for 'Misc' and 'CMYK', alongside checking for Sprite Type 7.
* Correctly deals with 2bpp masks.
* Tiled the window backgrounds.
* Fixed a bug where resizing the main window while the sprite file was loading would cause the application to crash.
* Correctly identifies 'old' and 'new' style masks.
* Can now import PNG, BMP and JPEG files into a sprite file. Resultant sprite is either Arthur or RISC OS 3.5 compatible, depending on the setting passed and what colour depth has been detected (unless it has an Alpha, in which case it is RISC OS 4.39 compatible).
* Properly frees up the memory when a sprite file is closed, prior to another being opened.
* Moved the code to read individual sprites to a separate function so that it can be called after importing an image, as a confidence check.
* New button to set options.
* New button to close current sprite file.
* New button to import images.

1.03
* Completely restructured the class code to tidy it up and make it faster.
* When a sprite file is now opened, it is appended to any sprite file already open. The sprites loaded are treated as if they are in a sprite pool.
* If more than one file is dragged into the application, or more than one selected on the open file dialogue box, then all selected files will attempted to be opened, appending to the first.
* Sprite pool size (and, hence, file size) is now reported in the status bar.
* New Settings dialogue box to select which OS to aim for with imported images.
* Can now rename sprites.
* Clicking away from a sprite will now de-select it, if selected.
* Can now delete sprites.
* Application is now High-DPI Aware.
* Found that, on Windows, the sprite area was not completely tiled.